type User @model {
  id: ID!
  username: String!
  email: String!
  bio: String
  picture: String
  songs: [Song] @connection(keyName: "byUser", fields: ["id"])
}

type Song @model @key(name: "byUser", fields: ["userID"])
  @auth(rules: [{ allow: owner, operations: [create, delete, update] }]){
  id: ID!
  title: String!
  description: String!
  artUri: String

  audioUri: String!

  userID: ID!
  user: User @connection(fields: ["userID"])

  genreID: ID!
  genres: [Genre] @connection(fields: ["genreID"])

}

type MediaCategory @model {
  id: ID!
  name: String!
  songs: [Radio] @connection(keyName: "byMediaCategory", fields: ["id"])
}

type Radio @model @key(name: "byMediaCategory", fields: ["mediaCategoryID"])  {
  id: ID!
  name: String!
  freq: String!
  country: String!
  picture: String

  numberOfMusicShows: String

  mediaCategoryID: ID
  MediaCategory: MediaCategory @connection(fields: ["mediaCategoryID"])

  genresAccepted: [Genre] @connection(fields: ["id"])
  songsAcquired: [Song] @connection(fields: ["id"])
}

type Genre @model{
  id: ID!
  name: String!
  genrePic: String
}
